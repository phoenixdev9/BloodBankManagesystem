<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBoxClose.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>